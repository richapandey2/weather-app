{"version":3,"sources":["utils/formatter.js","api/weather/Weather.Transformer.js","api/weather/Weather.Api.js","api/defaultUri.js","actions/Weather.Action.js","constants/ActionTypes.js","components/error/ErrorComponent.js","constants/Constants.js","components/loading/LoadingComponent.js","components/bar-chart/BarChartComponent.js","components/card/CardComponent.js","components/current-details/CurrentDetailsComponent.js","components/temperature-and-search/TemperatureAndSearchComponent.js","components/page-change-button/PageChangeButtonComponent.js","pages/HomePage.js","components/header/HeaderComponent.js","container/App.js","reducers/Weather.Reducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["convertFahrenheittoCelcius","temp","toFixed","getPageWiseData","data","totalKeys","Object","keys","totalPages","Math","round","length","app","i","k","splice","weatherApi","city","fetch","weatherUrl","then","response","json","currentDate","Date","overAllDetails","name","country","dataObj","list","forEach","date","dat","dt_txt","localeDate","toLocaleDateString","tempInFahrenheit","main","weather","toGMTString","substring","description","icon","barChart","push","time","sum","count","toString","pageDetails","details","weatherTransformer","catch","error","fetchWeatherAction","dispatch","type","payload","ErrorComponent","fetchWeatherData","Box","Alert","severity","AlertTitle","Button","variable","color","onClick","LoadingComponent","classes","makeStyles","backdrop","backgroundColor","useStyle","Backdrop","className","open","CircularProgress","BarChartComponent","chartDetails","handleDetailsDialog","isCelcius","Transition","React","forwardRef","props","ref","Slide","direction","Dialog","TransitionComponent","onClose","DialogContent","height","width","domainPadding","x","y","scale","dependentAxis","offsetX","style","axisLabel","padding","label","barWidth","dataComponent","fill","labels","datum","CardDetailComponent","detail","useState","showDialog","setShowDialog","paper","boxShadow","value","Paper","alt","src","connect","state","weatherReducer","box","display","justifyContent","TempratureAndSearchComponent","handleSwitchButton","searchCity","handleTextOnChange","handleKeyPress","TextField","id","rowsMax","onChange","onKeyDown","Switch","checked","event","pageIndex","handlePageButton","Grid","data-test-id","container","spacing","item","Fab","fetchData","showLoader","setPageIndex","setIsCelcius","setSearchCity","target","keyCode","map","card","index","key","HeaderComponent","root","alignItems","text","fontSize","fontWeight","AppBar","Typography","App","bind","this","showData","isError","isPending","Container","fixed","marginTop","Component","initialState","rootReducer","combineReducers","action","assign","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"uTAIaA,EAA6B,SAAAC,GACxC,QAAyB,IAAbA,EAAO,IAAW,GAAGC,QAAQ,ICHrCC,EAAkB,SAACC,GAKvB,IAJA,IAAMC,EAAYC,OAAOC,KAAKH,GACxBI,EAAaC,KAAKC,MAAML,EAAUM,OAAS,GAC3CC,EAAM,GACRC,EAAI,EACDA,EAAIL,GAAY,CACrB,IAAIM,EAAIT,EAAU,GAAK,EAAIA,EAAUM,OACrCC,EAAIC,GAAKR,EAAUU,OAAO,EAAGD,GAC7BD,IAEF,OAAOD,GCTF,IAAMI,EAAa,SAACC,GACzB,OAAOC,MCJF,SAAoBD,GACzB,OAAIA,EACI,sDAAN,OAA6DA,EAA7D,kDAEI,6GDAOE,CAAWF,IACrBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GAAD,ODSwB,SAACA,GACjC,IAAMmB,EAAc,IAAIC,KAClBC,EAAiB,CACrBR,KAAMb,EAAKa,KAAKS,KAChBC,QAASvB,EAAKa,KAAKU,SAEfC,EAAU,GAsChB,OArCAxB,EAAKyB,KAAKC,SAAQ,SAACC,GACjB,IAAMC,EAAM,IAAIR,KAAKO,EAAKE,QACpBC,EAAaF,EAAIG,qBACjBC,IDxBC,MCwB2CL,EAAKM,KAAKpC,KDxB5C,QAAoB,IAAIC,QAAQ,GC0B9CgC,IAAeX,EAAYY,sBAC1BV,EAAea,UAEhBb,EAAeM,KAAOR,EAAYgB,cAAcC,UAAU,EAAG,IAC7Df,EAAexB,KAAOmC,EACtBX,EAAea,QAAUP,EAAKO,QAAQ,GAAGG,YACzChB,EAAeiB,KAAOX,EAAKO,QAAQ,GAAGI,MAEnCd,EAAQM,IAgBXN,EAAQM,GAAYS,SAASC,KAAK,CAChC3C,QAASmC,GAAkBlC,QAAQ,GACnC2C,KAAMb,IAERJ,EAAQM,GAAYY,KAAOlB,EAAQM,GAAYY,MAAOV,EACtDR,EAAQM,GAAYa,OAAS,GApB7BnB,EAAQM,GAAc,CACpBH,KAAMC,EAAIgB,WAAWR,UAAU,EAAG,IAClCvC,KAAMmC,EACNE,QAASP,EAAKO,QAAQ,GAAGG,YACzBC,KAAMX,EAAKO,QAAQ,GAAGI,KACtBI,IAAKV,EACLW,MAAO,EACPJ,SAAU,CACR,CACE1C,QAASmC,GAAkBlC,QAAQ,GACnC2C,KAAMb,QAaT,CACLiB,YAAa9C,EAAgByB,GAC7BsB,QAAStB,EACTH,kBCxDgB0B,CAAmB/C,MAClCgD,OAAM,SAACC,GAAD,OAAWA,MEATC,EAAqB,SAACrC,GAAD,OAAU,SAACsC,GAC3CvC,EAAWC,GACRG,MAAK,SAACC,GAAD,OACJkC,EAAS,CAAEC,KCToB,wBDSSC,QAASpC,OAElD+B,OAAM,kBAAMG,EAAS,CAAEC,KCVS,+B,oCC8BtBE,MAtBf,YAA+C,IAArBC,EAAoB,EAApBA,iBACxB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAS,SACd,kBAACC,EAAA,EAAD,KCTmB,SAFzB,yDDaM,kBAACC,EAAA,EAAD,CACEC,SAAS,YACTC,MAAM,YACNC,QAASR,GCfqB,gB,2BCczBS,MAff,WACE,IAMMC,EANWC,aAAW,iBAAO,CACjCC,SAAU,CACRC,gBAAiB,YACjBN,MAAO,WAGKO,GAChB,OACE,kBAACC,EAAA,EAAD,CAAUC,UAAWN,EAAQE,SAAUK,MAAI,GACzC,kBAACC,EAAA,EAAD,CAAkBX,MAAM,c,yFCsDfY,MAxDf,YAA8E,IAAjDC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,oBAAqBC,EAAa,EAAbA,UACxDC,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAE7C,OACE,kBAACI,EAAA,EAAD,CACEb,MAAI,EACJc,oBAAqBR,EACrBS,QAAS,kBAAMX,GAAoB,KAEnC,kBAACY,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,cAAe,CAAEC,EAAG,GAAIC,EAAG,CAAC,EAAG,KAC/BC,MAAO,CAAEF,EAAG,SAEZ,kBAAC,IAAD,CACEG,eAAa,EACbC,QAAS,GACTC,MAAO,CAAEC,UAAW,CAAEC,QAAS,KAC/BC,MAAOvB,EFxBe,yBADG,8BE2B3B,kBAAC,IAAD,CAAauB,MFzBH,SE0BV,kBAAC,IAAD,CACEC,SAAU,GACVC,cAAe,kBAAC,IAAD,MACfL,MAAO,CACLjG,KAAM,CAAEuG,KAAM,YAEhBvG,KAAM2E,EACNiB,EAAE,OACFC,EAAE,OACFW,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MACT,OAAO5B,EACHjF,EAA2B6G,EAAM5G,MACjC4G,EAAM5G,Y,OCkCT6G,MAzEf,YAAqD,IAAtBC,EAAqB,EAArBA,OAAQ9B,EAAa,EAAbA,UAAa,EACd+B,oBAAS,GADK,mBAC3CC,EAD2C,KAC/BC,EAD+B,KAE5CzC,EAAWH,aAAW,iBAAO,CACjC6C,MAAO,CACLrB,MAAO,OACPD,OAAQ,OACRU,QAAS,OACT/B,gBAAiB,UACjB4C,UACE,8GAIApC,EAAsB,SAACqC,GAC3BH,EAAcG,IAEVhD,EAAUI,IAChB,OACE,oCACGsC,GACC,kBAACO,EAAA,EAAD,CACE3C,UAAWN,EAAQ8C,MACnBhD,QAAS,kBAAMa,GAAoB,KAEnC,yBAAKL,UAAU,YACb,6BACE,yBACEmB,MAAM,QACNyB,IAAI,OACJC,IAAG,0CAAqCT,EAAOrE,KAA5C,WAGP,yBAAKiC,UAAU,gBAAgBoC,EAAOzE,SACtC,yBAAKqC,UAAU,aACZM,EACGjF,GACG+G,EAAOjE,IAAMiE,EAAOhE,OAAO7C,QAAQ,IHjC5B,SGmCT6G,EAAOjE,IAAMiE,EAAOhE,OAAO7C,QAAQ,GHlCvB,SGoCnB,yBAAKyE,UAAU,kBAAkBoC,EAAOhF,QAI7CkF,GACC,kBAAC,EAAD,CACElC,aAAcgC,EAAOpE,SACrBqC,oBAAqBA,EACrBC,UAAWA,MCLrB,IAMewC,eANS,SAACC,GACvB,MAAO,CACLjG,eAAgBiG,EAAMC,eAAevH,KAAKqB,kBAIN,KAAzBgG,EAjDf,SAAiCpC,GAC/B,IAOMhB,EAPWC,aAAW,iBAAO,CACjCsD,IAAK,CACHC,QAAS,OACTC,eAAgB,SAChBvB,QAAS,WAGG9B,GACRhD,EAA8B4D,EAA9B5D,eAAgBwD,EAAcI,EAAdJ,UACxB,OACE,oCACGxD,GACC,kBAACmC,EAAA,EAAD,CAAKe,UAAWN,EAAQuD,KACtB,yBAAKjD,UAAU,YACb,yBAAKA,UAAU,gBACZlD,EAAeR,KADlB,IACyBQ,EAAeE,SAExC,yBAAKgD,UAAU,aACZM,EACGjF,EAA2ByB,EAAexB,MJjBhC,QIkBVwB,EAAexB,KJjBF,SImBnB,yBAAK0E,UAAU,kBAAkBlD,EAAeM,Y,kBCY7CgG,MAtCf,YAMI,IALF9C,EAKC,EALDA,UACA+C,EAIC,EAJDA,mBACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,eAEA,OACE,kBAACvE,EAAA,EAAD,CAAKe,UAAU,WACb,kBAACyD,EAAA,EAAD,CACEC,GAAG,8BACH7B,MAAM,cACN8B,QAAS,EACTjB,MAAOY,EACPM,SAAUL,EACVM,UAAWL,IAEb,yBAAKxD,UAAU,gBLVU,QKYvB,kBAAC8D,EAAA,EAAD,CACEC,SAAuB,IAAdzD,EACTsD,SAAU,SAACI,GAAD,OAAWX,EAAmBW,IACxCzE,MAAM,YLhBY,W,SMkC5B,IAMeuD,eANS,SAACC,GACvB,MAAO,CACLzE,YAAayE,EAAMC,eAAevH,KAAK6C,eAIH,KAAzBwE,EA1Cf,SAAmCpC,GAAQ,IACjCpC,EAA6CoC,EAA7CpC,YAAa2F,EAAgCvD,EAAhCuD,UAAWC,EAAqBxD,EAArBwD,iBAChC,OACE,kBAACC,EAAA,EAAD,CACEC,eAAa,YACbC,WAAS,EACTC,QAAS,EACT5C,MAAO,CAAEyB,eAAgB,kBAEzB,kBAACgB,EAAA,EAAD,CAAMI,MAAI,GACPN,EAAY,GACX,kBAACO,EAAA,EAAD,CACExE,UAAU,cACVR,QAAS,kBAAM0E,EAAiB,cAEhC,uBAAGlE,UAAU,wBNTgB,oBManC,kBAACmE,EAAA,EAAD,CAAMI,MAAI,GACPjG,GAAe2F,IAActI,OAAOC,KAAK0C,GAAatC,OAAS,GAC9D,kBAACwI,EAAA,EAAD,CAAKxE,UAAU,cAAcR,QAAS,kBAAM0E,EAAiB,UAC3D,uBAAGlE,UAAU,wBNjBY,2BOmErC,IAce8C,eAdS,SAACC,GACvB,MAAO,CACLxE,QAASwE,EAAMC,eAAevH,KAAK8C,QACnCD,YAAayE,EAAMC,eAAevH,KAAK6C,gBAIhB,SAACM,GAC1B,MAAO,CACL6F,UAAW,SAACnB,GAAD,OAAgB1E,EAASD,EAAmB2E,KACvDoB,WAAY,kBAAM9F,GV5EY,SAACA,GACjCA,EAAS,CAAEC,KChBwB,iCS+FtBiE,EApFf,SAAkBpC,GAAQ,IAAD,EACW2B,mBAAS,GADpB,mBAChB4B,EADgB,KACLU,EADK,OAEWtC,oBAAS,GAFpB,mBAEhB/B,EAFgB,KAELsE,EAFK,OAGavC,mBAAS,IAHtB,mBAGhBiB,EAHgB,KAGJuB,EAHI,KAIftG,EAAgDmC,EAAhDnC,QAASD,EAAuCoC,EAAvCpC,YAAamG,EAA0B/D,EAA1B+D,UAAWC,EAAehE,EAAfgE,WAyBzC,OACE,oCACE,kBAAC,EAAD,CACEpE,UAAWA,EACXgD,WAAYA,EACZD,mBApBqB,SAACW,GAC1BY,EAAaZ,EAAMc,OAAOf,UAoBtBR,mBAjBqB,SAACS,GAC1Ba,EAAcb,EAAMc,OAAOpC,QAiBvBc,eAfiB,SAACQ,GACC,MAAlBA,EAAMe,UACTF,EAAcb,EAAMc,OAAOpC,OAC3BgC,IACAD,EAAUT,EAAMc,OAAOpC,WAavB,kBAAC,EAAD,CAAyBpC,UAAWA,IACpC,kBAAC,EAAD,CACE2D,UAAWA,EACXC,iBAnCmB,SAACrF,GAEtB8F,EADW,SAAT9F,EACWoF,EAAY,EAEZA,EAAY,MAiCxB1F,GACC,kBAAC4F,EAAA,EAAD,CAAME,WAAS,EAACC,QAAS,EAAG5C,MAAO,CAAEyB,eAAgB,WAClD7E,EAAY2F,GAAWe,KAAI,SAACC,EAAMC,GAAP,OAC1B,kBAACf,EAAA,EAAD,CAAMI,MAAI,EAACY,IAAK,OAASD,GACvB,kBAAC,EAAD,CACEC,IAAKD,EACL9C,OAAQ7D,EAAQ0G,GAChB3E,UAAWA,a,kBCtCZ8E,MAnBf,WACE,IAUM1F,EAVWC,aAAW,iBAAO,CACjC0F,KAAM,CACJzD,QAAS,OACT0D,WAAY,UAEdC,KAAM,CACJC,SAAU,OACVC,WAAY,WAGA3F,GAChB,OACE,kBAAC4F,EAAA,EAAD,CAAQ1F,UAAWN,EAAQ2F,MACzB,kBAACM,EAAA,EAAD,CAAY3F,UAAWN,EAAQ6F,MRlBX,qBSUpBK,E,kDACJ,aAAe,IAAD,8BACZ,gBACK5G,iBAAmB,EAAKA,iBAAiB6G,KAAtB,gBAFZ,E,gEAKZC,KAAK9G,qB,yCAIL8G,KAAKpF,MAAMgE,aACXoB,KAAKpF,MAAM+D,c,+BAGH,IAAD,EACkCqB,KAAKpF,MAAtCqF,EADD,EACCA,SAAUC,EADX,EACWA,QAASC,EADpB,EACoBA,UAC3B,OACE,oCACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLzE,MAAO,CACL0E,UAAW,QAGZL,GAAY,kBAAC,EAAD,MACZE,GAAa,kBAAC,EAAD,MACbD,GACC,kBAAC,EAAD,CAAgBhH,iBAAkB8G,KAAK9G,yB,GA5BjCqH,aA2DHvD,eAfS,SAACC,GACvB,MAAO,CACLgD,SAAUhD,EAAMC,eAAe+C,SAC/BC,QAASjD,EAAMC,eAAegD,QAC9BC,UAAWlD,EAAMC,eAAeiD,cAIT,SAACrH,GAC1B,MAAO,CACL6F,UAAW,kBAAM7F,EAASD,MAC1B+F,WAAY,kBAAM9F,GZlDY,SAACA,GACjCA,EAAS,CAAEC,KChBwB,iCWqEtBiE,CAA6C8C,G,0BC/DtDU,GAAe,CACnBL,WAAW,EACXF,UAAU,EACVtK,KAAM,GACNuK,SAAS,GCPX,IAIeO,GAJKC,0BAAgB,CAClCxD,eDSa,WAA4D,IAApCD,EAAmC,uDAA3BuD,GAAcG,EAAa,uDAAJ,GACpE,OAAQA,EAAO5H,MACb,IZfiC,wBYgB/B,OAAOlD,OAAO+K,OAAO,GAAI3D,EAAO,CAAEkD,WAAW,EAAMF,UAAU,IAC/D,IZhBiC,wBYiB/B,OAAOpK,OAAO+K,OAAO,GAAI3D,EAAO,CAC9BkD,WAAW,EACXF,UAAU,EACVtK,KAAMgL,EAAO3H,UAEjB,IZrBiC,wBYsB/B,OAAOnD,OAAO+K,OAAO,GAAI3D,EAAO,CAC9BkD,WAAW,EACXF,UAAU,EACVC,SAAS,IAEb,QACE,OAAOjD,MEpBE4D,GALDC,sBACZL,GACAM,8BAAoBC,0BAAgBC,OCKlBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOY,IACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnL,MAAK,SAAAoL,GACJA,EAAaC,gBAEdrJ,OAAM,SAAAC,GACLqJ,QAAQrJ,MAAMA,EAAMsJ,c","file":"static/js/main.1a94cad4.chunk.js","sourcesContent":["export const changeKelvinToFahrenheit = temp => {\n  return +((+temp - 273.15) * (9 / 5) + 32).toFixed(2);\n};\n\nexport const convertFahrenheittoCelcius = temp => {\n  return +(((+temp - 32) * 5) / 9).toFixed(2);\n};\n","import { changeKelvinToFahrenheit } from \"../../utils/formatter\";\n\nconst getPageWiseData = (data) => {\n  const totalKeys = Object.keys(data);\n  const totalPages = Math.round(totalKeys.length / 3);\n  const app = {};\n  let i = 0;\n  while (i < totalPages) {\n    let k = totalKeys[3] ? 3 : totalKeys.length;\n    app[i] = totalKeys.splice(0, k);\n    i++;\n  }\n  return app;\n};\n\nexport const weatherTransformer = (data) => {\n  const currentDate = new Date();\n  const overAllDetails = {\n    city: data.city.name,\n    country: data.city.country,\n  };\n  const dataObj = {};\n  data.list.forEach((date) => {\n    const dat = new Date(date.dt_txt);\n    const localeDate = dat.toLocaleDateString();\n    const tempInFahrenheit = changeKelvinToFahrenheit(date.main.temp);\n    if (\n      localeDate === currentDate.toLocaleDateString() &&\n      !overAllDetails.weather\n    ) {\n      overAllDetails.date = currentDate.toGMTString().substring(0, 16);\n      overAllDetails.temp = tempInFahrenheit;\n      overAllDetails.weather = date.weather[0].description;\n      overAllDetails.icon = date.weather[0].icon;\n    }\n    if (!dataObj[localeDate]) {\n      dataObj[localeDate] = {\n        date: dat.toString().substring(0, 15),\n        temp: tempInFahrenheit,\n        weather: date.weather[0].description,\n        icon: date.weather[0].icon,\n        sum: tempInFahrenheit,\n        count: 1,\n        barChart: [\n          {\n            temp: +(+tempInFahrenheit).toFixed(2),\n            time: dat,\n          },\n        ],\n      };\n    } else {\n      dataObj[localeDate].barChart.push({\n        temp: +(+tempInFahrenheit).toFixed(2),\n        time: dat,\n      });\n      dataObj[localeDate].sum = +dataObj[localeDate].sum + +tempInFahrenheit;\n      dataObj[localeDate].count += 1;\n    }\n  });\n  return {\n    pageDetails: getPageWiseData(dataObj),\n    details: dataObj,\n    overAllDetails,\n  };\n};\n","import { weatherTransformer } from \"./Weather.Transformer\";\nimport { weatherUrl } from \"../defaultUri\";\n\nexport const weatherApi = (city) => {\n  return fetch(weatherUrl(city))\n    .then((response) => response.json())\n    .then((data) => weatherTransformer(data))\n    .catch((error) => error);\n};\n","export function weatherUrl(city) {\n  if (city) {\n    return `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40`;\n  }\n  return `https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40`;\n}\n","import { weatherApi } from \"../api/weather/Weather.Api\";\nimport {\n  FETCH_WEATHER_PENDING,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE,\n} from \"../constants/ActionTypes\";\n\nexport const fetchWeatherAction = (city) => (dispatch) => {\n  weatherApi(city)\n    .then((response) =>\n      dispatch({ type: FETCH_WEATHER_SUCCESS, payload: response })\n    )\n    .catch(() => dispatch({ type: FETCH_WEATHER_FAILURE }));\n};\n\nexport const loaderAction = () => (dispatch) => {\n  dispatch({ type: FETCH_WEATHER_PENDING });\n};\n","export const FETCH_WEATHER_PENDING = \"FETCH_WAETHER_PENDING\";\nexport const FETCH_WEATHER_SUCCESS = \"FETCH_WEATHER_SUCCESS\";\nexport const FETCH_WEATHER_FAILURE = \"FETCH_WEATHER_FAILURE\";\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport {\n  ERROR_MESSAGE_LABEL,\n  ERROR_LABEL_BUTTON_LABEL,\n  ERROR_TITLE,\n} from \"../../constants/Constants\";\n\nfunction ErrorComponent({ fetchWeatherData }) {\n  return (\n    <Box>\n      <Alert severity=\"error\">\n        <AlertTitle>{ERROR_TITLE}</AlertTitle>\n        {ERROR_MESSAGE_LABEL}\n        <Button\n          variable=\"contained\"\n          color=\"secondary\"\n          onClick={fetchWeatherData}\n        >\n          {ERROR_LABEL_BUTTON_LABEL}\n        </Button>\n      </Alert>\n    </Box>\n  );\n}\n\nErrorComponent.propTypes = {\n  fetchWeatherData: PropTypes.func,\n};\n\nexport default ErrorComponent;\n","export const APP_HEADER = \"Weather Forcast\";\n\nexport const ERROR_MESSAGE_LABEL =\n  \"Opps..!! something went wrong. Please try again later.\";\nexport const ERROR_LABEL_BUTTON_LABEL = \"Try again\";\nexport const ERROR_TITLE = \"Error\";\n\nexport const TEMP_FAHRENHEIT_LABEL = \"Temperature in Fahrenheit\";\nexport const TEMP_CELCIUS_LABEL = \"Temperature in Celcius\";\nexport const TIME = \"Time\";\n\nexport const CELCIUS_ICON = \"°C\";\nexport const FAHRENHEIT_ICON = \"°F\";\n\nexport const PAGE_BUTTON_ICON_NEXT = \"arrow_forward_ios\";\nexport const PAGE_BUTTON_ICON_PREVIOUS = \"arrow_back_ios\";\n","import React from \"react\";\nimport { CircularProgress, Backdrop, makeStyles } from \"@material-ui/core\";\n\nfunction LoadingComponent() {\n  const useStyle = makeStyles(() => ({\n    backdrop: {\n      backgroundColor: \"#8e898938\",\n      color: \"#fff\",\n    },\n  }));\n  const classes = useStyle();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"primary\" />\n    </Backdrop>\n  );\n}\n\nexport default LoadingComponent;\n","import React from \"react\";\nimport { Dialog, DialogContent, Slide } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { VictoryChart, VictoryAxis, VictoryBar, Bar } from \"victory\";\nimport { convertFahrenheittoCelcius } from \"../../utils/formatter\";\nimport {\n  TEMP_FAHRENHEIT_LABEL,\n  TEMP_CELCIUS_LABEL,\n  TIME,\n} from \"../../constants/Constants\";\n\nfunction BarChartComponent({ chartDetails, handleDetailsDialog, isCelcius }) {\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n  return (\n    <Dialog\n      open\n      TransitionComponent={Transition}\n      onClose={() => handleDetailsDialog(false)}\n    >\n      <DialogContent>\n        <VictoryChart\n          height={400}\n          width={500}\n          domainPadding={{ x: 50, y: [0, 20] }}\n          scale={{ x: \"time\" }}\n        >\n          <VictoryAxis\n            dependentAxis\n            offsetX={50}\n            style={{ axisLabel: { padding: 35 } }}\n            label={isCelcius ? TEMP_CELCIUS_LABEL : TEMP_FAHRENHEIT_LABEL}\n          />\n          <VictoryAxis label={TIME} />\n          <VictoryBar\n            barWidth={30}\n            dataComponent={<Bar />}\n            style={{\n              data: { fill: \"#3f51b5\" },\n            }}\n            data={chartDetails}\n            x=\"time\"\n            y=\"temp\"\n            labels={({ datum }) => {\n              return isCelcius\n                ? convertFahrenheittoCelcius(datum.temp)\n                : datum.temp;\n            }}\n          />\n        </VictoryChart>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nBarChartComponent.propTypes = {\n  chartDetails: PropTypes.arrayOf(\n    PropTypes.shape({\n      time: PropTypes.string,\n      temp: PropTypes.number,\n    })\n  ),\n  handleDetailsDialog: PropTypes.func,\n  isCelcius: PropTypes.bool,\n};\n\nexport default BarChartComponent;\n","import React, { useState } from \"react\";\nimport { Paper, makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport BarChartComponent from \"../bar-chart/BarChartComponent\";\nimport { convertFahrenheittoCelcius } from \"../../utils/formatter\";\nimport { CELCIUS_ICON, FAHRENHEIT_ICON } from \"../../constants/Constants\";\nimport \"../../Styles.css\";\n\nfunction CardDetailComponent({ detail, isCelcius }) {\n  const [showDialog, setShowDialog] = useState(false);\n  const useStyle = makeStyles(() => ({\n    paper: {\n      width: \"15em\",\n      height: \"18em\",\n      padding: \"30px\",\n      backgroundColor: \"#e0e0e0\",\n      boxShadow:\n        \"0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\",\n    },\n  }));\n\n  const handleDetailsDialog = (value) => {\n    setShowDialog(value);\n  };\n  const classes = useStyle();\n  return (\n    <>\n      {detail && (\n        <Paper\n          className={classes.paper}\n          onClick={() => handleDetailsDialog(true)}\n        >\n          <div className=\"main-div\">\n            <div>\n              <img\n                width=\"100px\"\n                alt=\"icon\"\n                src={`http://openweathermap.org/img/w/${detail.icon}.png`}\n              />\n            </div>\n            <div className=\"primary-text\">{detail.weather}</div>\n            <div className=\"temp-text\">\n              {isCelcius\n                ? convertFahrenheittoCelcius(\n                    (detail.sum / detail.count).toFixed(2)\n                  ) + CELCIUS_ICON\n                : (detail.sum / detail.count).toFixed(2) + FAHRENHEIT_ICON}\n            </div>\n            <div className=\"secondary-text\">{detail.date}</div>\n          </div>\n        </Paper>\n      )}\n      {showDialog && (\n        <BarChartComponent\n          chartDetails={detail.barChart}\n          handleDetailsDialog={handleDetailsDialog}\n          isCelcius={isCelcius}\n        />\n      )}\n    </>\n  );\n}\n\nCardDetailComponent.propTypes = {\n  detail: PropTypes.shape({\n    barChart: PropTypes.arrayOf(\n      PropTypes.shape({\n        time: PropTypes.string,\n        temp: PropTypes.number,\n      })\n    ),\n    date: PropTypes.string,\n    count: PropTypes.number,\n    sum: PropTypes.number,\n    weather: PropTypes.string,\n    icon: PropTypes.string,\n  }),\n  showDialog: PropTypes.func,\n  isCelcius: PropTypes.bool,\n};\n\nexport default CardDetailComponent;\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { convertFahrenheittoCelcius } from \"../../utils/formatter\";\nimport { CELCIUS_ICON, FAHRENHEIT_ICON } from \"../../constants/Constants\";\nimport \"../../Styles.css\";\n\nfunction CurrentDetailsComponent(props) {\n  const useStyle = makeStyles(() => ({\n    box: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: \"30px\",\n    },\n  }));\n  const classes = useStyle();\n  const { overAllDetails, isCelcius } = props;\n  return (\n    <>\n      {overAllDetails && (\n        <Box className={classes.box}>\n          <div className=\"main-div\">\n            <div className=\"primary-text\">\n              {overAllDetails.city},{overAllDetails.country}\n            </div>\n            <div className=\"temp-text\">\n              {isCelcius\n                ? convertFahrenheittoCelcius(overAllDetails.temp) + CELCIUS_ICON\n                : overAllDetails.temp + FAHRENHEIT_ICON}\n            </div>\n            <div className=\"secondary-text\">{overAllDetails.date}</div>\n          </div>\n        </Box>\n      )}\n    </>\n  );\n}\n\nCurrentDetailsComponent.propTypes = {\n  overAllDetails: PropTypes.shape({\n    date: PropTypes.string,\n    temp: PropTypes.number,\n    weather: PropTypes.string,\n    icon: PropTypes.string,\n    country: PropTypes.string,\n    city: PropTypes.string,\n  }),\n  isCelcius: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    overAllDetails: state.weatherReducer.data.overAllDetails,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CurrentDetailsComponent);\n","import React from \"react\";\nimport { Box, Switch, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { CELCIUS_ICON, FAHRENHEIT_ICON } from \"../../constants/Constants\";\n\nfunction TempratureAndSearchComponent({\n  isCelcius,\n  handleSwitchButton,\n  searchCity,\n  handleTextOnChange,\n  handleKeyPress,\n}) {\n  return (\n    <Box className=\"div-box\">\n      <TextField\n        id=\"standard-multiline-flexible\"\n        label=\"Search City\"\n        rowsMax={4}\n        value={searchCity}\n        onChange={handleTextOnChange}\n        onKeyDown={handleKeyPress}\n      />\n      <div className=\"div-temp-box\">\n        {FAHRENHEIT_ICON}\n        <Switch\n          checked={isCelcius === true}\n          onChange={(event) => handleSwitchButton(event)}\n          color=\"default\"\n        />\n        {CELCIUS_ICON}\n      </div>\n    </Box>\n  );\n}\n\nTempratureAndSearchComponent.propTypes = {\n  isCelcius: PropTypes.bool,\n  handleSwitchButton: PropTypes.func,\n  searchCity: PropTypes.string,\n  handleTextOnChange: PropTypes.func,\n  handleKeyPress: PropTypes.func,\n};\n\nexport default TempratureAndSearchComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Fab } from \"@material-ui/core\";\nimport {\n  PAGE_BUTTON_ICON_PREVIOUS,\n  PAGE_BUTTON_ICON_NEXT,\n} from \"../../constants/Constants\";\n\nfunction PageChangeButtonComponent(props) {\n  const { pageDetails, pageIndex, handlePageButton } = props;\n  return (\n    <Grid\n      data-test-id=\"container\"\n      container\n      spacing={4}\n      style={{ justifyContent: \"space-between\" }}\n    >\n      <Grid item>\n        {pageIndex > 0 && (\n          <Fab\n            className=\"page-button\"\n            onClick={() => handlePageButton(\"previous\")}\n          >\n            <i className=\"material-icons md-48\">{PAGE_BUTTON_ICON_PREVIOUS}</i>\n          </Fab>\n        )}\n      </Grid>\n      <Grid item>\n        {pageDetails && pageIndex !== Object.keys(pageDetails).length - 1 && (\n          <Fab className=\"page-button\" onClick={() => handlePageButton(\"next\")}>\n            <i className=\"material-icons md-48\">{PAGE_BUTTON_ICON_NEXT}</i>\n          </Fab>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nPageChangeButtonComponent.propTypes = {\n  pageDetails: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n  pageIndex: PropTypes.number,\n  handlePageButton: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageDetails: state.weatherReducer.data.pageDetails,\n  };\n};\n\nexport default connect(mapStateToProps, null)(PageChangeButtonComponent);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CardDetailComponent from \"../components/card/CardComponent\";\nimport CurrentDetailsComponent from \"../components/current-details/CurrentDetailsComponent\";\nimport TempratureAndSearchComponent from \"../components/temperature-and-search/TemperatureAndSearchComponent\";\nimport PageChangeButtonComponent from \"../components/page-change-button/PageChangeButtonComponent\";\nimport { fetchWeatherAction, loaderAction } from \"../actions/Weather.Action\";\nimport \"../Styles.css\";\n\nfunction HomePage(props) {\n  const [pageIndex, setPageIndex] = useState(0);\n  const [isCelcius, setIsCelcius] = useState(false);\n  const [searchCity, setSearchCity] = useState(\"\");\n  const { details, pageDetails, fetchData, showLoader } = props;\n\n  const handlePageButton = (type) => {\n    if (type === \"next\") {\n      setPageIndex(pageIndex + 1);\n    } else {\n      setPageIndex(pageIndex - 1);\n    }\n  };\n\n  const handleSwitchButton = (event) => {\n    setIsCelcius(event.target.checked);\n  };\n\n  const handleTextOnChange = (event) => {\n    setSearchCity(event.target.value);\n  };\n  const handleKeyPress = (event) => {\n    if (+event.keyCode === 13) {\n      setSearchCity(event.target.value);\n      showLoader();\n      fetchData(event.target.value);\n    }\n  };\n\n  return (\n    <>\n      <TempratureAndSearchComponent\n        isCelcius={isCelcius}\n        searchCity={searchCity}\n        handleSwitchButton={handleSwitchButton}\n        handleTextOnChange={handleTextOnChange}\n        handleKeyPress={handleKeyPress}\n      />\n      <CurrentDetailsComponent isCelcius={isCelcius} />\n      <PageChangeButtonComponent\n        pageIndex={pageIndex}\n        handlePageButton={handlePageButton}\n      />\n      {details && (\n        <Grid container spacing={8} style={{ justifyContent: \"center\" }}>\n          {pageDetails[pageIndex].map((card, index) => (\n            <Grid item key={\"Grid\" + index}>\n              <CardDetailComponent\n                key={index}\n                detail={details[card]}\n                isCelcius={isCelcius}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </>\n  );\n}\n\nHomePage.propTypes = {\n  details: PropTypes.object,\n  pageDetails: PropTypes.object,\n  fetchData: PropTypes.func,\n  showLoader: PropTypes.func,\n  pageIndex: PropTypes.number,\n  isCelcius: PropTypes.bool,\n  searchCity: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.weatherReducer.data.details,\n    pageDetails: state.weatherReducer.data.pageDetails,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchData: (searchCity) => dispatch(fetchWeatherAction(searchCity)),\n    showLoader: () => dispatch(loaderAction()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport { APP_HEADER } from \"../../constants/Constants\";\nimport { AppBar, Typography, makeStyles } from \"@material-ui/core\";\n\nfunction HeaderComponent() {\n  const useStyle = makeStyles(() => ({\n    root: {\n      padding: \"20px\",\n      alignItems: \"center\",\n    },\n    text: {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n    },\n  }));\n  const classes = useStyle();\n  return (\n    <AppBar className={classes.root}>\n      <Typography className={classes.text}>{APP_HEADER}</Typography>\n    </AppBar>\n  );\n}\n\nexport default HeaderComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { fetchWeatherAction, loaderAction } from \"../actions/Weather.Action\";\nimport ErrorComponent from \"../components/error/ErrorComponent\";\nimport LoadingComponent from \"../components/loading/LoadingComponent\";\nimport HomePage from \"../pages/HomePage\";\nimport HeaderComponent from \"../components/header/HeaderComponent\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  fetchWeatherData() {\n    this.props.showLoader();\n    this.props.fetchData();\n  }\n\n  render() {\n    const { showData, isError, isPending } = this.props;\n    return (\n      <>\n        <HeaderComponent />\n        <Container\n          fixed\n          style={{\n            marginTop: \"5em\",\n          }}\n        >\n          {showData && <HomePage />}\n          {isPending && <LoadingComponent />}\n          {isError && (\n            <ErrorComponent fetchWeatherData={this.fetchWeatherData} />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  showData: PropTypes.bool,\n  isError: PropTypes.bool,\n  isPending: PropTypes.bool,\n  fetchData: PropTypes.func,\n  showLoader: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    showData: state.weatherReducer.showData,\n    isError: state.weatherReducer.isError,\n    isPending: state.weatherReducer.isPending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchData: () => dispatch(fetchWeatherAction()),\n    showLoader: () => dispatch(loaderAction()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  FETCH_WEATHER_PENDING,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  isPending: false,\n  showData: true,\n  data: {},\n  isError: false,\n};\n\nexport default function weatherReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case FETCH_WEATHER_PENDING:\n      return Object.assign({}, state, { isPending: true, showData: false });\n    case FETCH_WEATHER_SUCCESS:\n      return Object.assign({}, state, {\n        isPending: false,\n        showData: true,\n        data: action.payload,\n      });\n    case FETCH_WEATHER_FAILURE:\n      return Object.assign({}, state, {\n        isPending: false,\n        showData: false,\n        isError: true,\n      });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./Weather.Reducer\";\n\nconst rootReducer = combineReducers({\n  weatherReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./container/App\";\nimport Store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}